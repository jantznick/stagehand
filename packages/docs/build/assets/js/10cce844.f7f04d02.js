"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[805],{1184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const o={},d=s.createContext(o);function r(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(d.Provider,{value:n},e.children)}},4133:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"api/organizations","title":"API Reference: Organizations","description":"This document provides a detailed breakdown of the organization-related API endpoints.","source":"@site/docs/api/organizations.md","sourceDirName":"api","slug":"/api/organizations","permalink":"/api/organizations","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/api/organizations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Reference: OIDC Configuration","permalink":"/api/oidc"},"next":{"title":"API Reference: Companies","permalink":"/api/company"}}');var o=i(4848),d=i(1184);const r={},c="API Reference: Organizations",l={},t=[{value:"Overview",id:"overview",level:2},{value:"Permissions Helper",id:"permissions-helper",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"<code>GET /:id</code>",id:"get-id",level:3},{value:"<code>PUT /:id</code>",id:"put-id",level:3},{value:"Endpoints (Auto-Join Domains)",id:"endpoints-auto-join-domains",level:2},{value:"<code>GET /:id/domains</code>",id:"get-iddomains",level:3},{value:"<code>POST /:id/domains</code>",id:"post-iddomains",level:3},{value:"<code>POST /:id/domains/:domainMappingId/verify</code>",id:"post-iddomainsdomainmappingidverify",level:3},{value:"<code>DELETE /:id/domains/:domainMappingId</code>",id:"delete-iddomainsdomainmappingid",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"api-reference-organizations",children:"API Reference: Organizations"})}),"\n",(0,o.jsx)(n.p,{children:"This document provides a detailed breakdown of the organization-related API endpoints."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"File:"})," ",(0,o.jsx)(n.code,{children:"packages/api/src/routes/organizations.js"}),"\n",(0,o.jsx)(n.strong,{children:"Base Path:"})," ",(0,o.jsx)(n.code,{children:"/api/v1/organizations"})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"Manages top-level organizations, which represent the highest level of tenancy in the system. These routes handle an organization's settings and the configuration for the auto-join feature, which allows users from a specific email domain to be added to the organization automatically upon registration."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Middleware:"})," All routes in this file are protected by the ",(0,o.jsx)(n.code,{children:"protect"})," middleware, ensuring a user must be authenticated to access them."]}),"\n",(0,o.jsx)(n.h2,{id:"permissions-helper",children:"Permissions Helper"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hasPermission(user, requiredRoles, entityType, entityId)"}),": A crucial utility function from ",(0,o.jsx)(n.code,{children:"src/utils/permissions.js"}),". It checks if the ",(0,o.jsx)(n.code,{children:"user"})," has one of the ",(0,o.jsx)(n.code,{children:"requiredRoles"})," (e.g., ",(0,o.jsx)(n.code,{children:"'ADMIN'"}),", ",(0,o.jsx)(n.code,{children:"'EDITOR'"}),") on the specified ",(0,o.jsx)(n.code,{children:"entityType"})," (e.g., ",(0,o.jsx)(n.code,{children:"'organization'"}),") for the given ",(0,o.jsx)(n.code,{children:"entityId"}),". This is the primary mechanism for authorization throughout the API."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,o.jsx)(n.h3,{id:"get-id",children:(0,o.jsx)(n.code,{children:"GET /:id"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves a single organization by its ID."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires the user to have a ",(0,o.jsx)(n.code,{children:"READER"}),", ",(0,o.jsx)(n.code,{children:"EDITOR"}),", or ",(0,o.jsx)(n.code,{children:"ADMIN"})," role on the organization."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"200"}),"):"]})," The full organization object."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Error Response (",(0,o.jsx)(n.code,{children:"403"}),"):"]})," If the user is not authorized."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Error Response (",(0,o.jsx)(n.code,{children:"404"}),"):"]})," If the organization is not found."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"put-id",children:(0,o.jsx)(n.code,{children:"PUT /:id"})}),"\n",(0,o.jsx)(n.p,{children:"Updates an organization's details."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires the user to have an ",(0,o.jsx)(n.code,{children:"ADMIN"})," role on the organization."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Body (",(0,o.jsx)(n.code,{children:"application/json"}),"):"]})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"name"})," (string, optional): The new name for the organization."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"description"})," (string, optional): The new description."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"accountType"})," (string, optional): The account type (e.g., ",(0,o.jsx)(n.code,{children:"'STANDARD'"}),", ",(0,o.jsx)(n.code,{children:"'ENTERPRISE'"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"defaultCompanyId"})," (string, optional): The ID of the company to be the default when downgrading to a ",(0,o.jsx)(n.code,{children:"'STANDARD'"})," account. This is required if the ",(0,o.jsx)(n.code,{children:"accountType"})," is being changed from ",(0,o.jsx)(n.code,{children:"'ENTERPRISE'"})," to ",(0,o.jsx)(n.code,{children:"'STANDARD'"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hierarchyDisplayNames"})," (object, optional): An object to customize the display names for the hierarchy levels (e.g., ",(0,o.jsx)(n.code,{children:'{ "company": "Business Unit", "team": "Squad" }'}),")."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"200"}),"):"]})," The updated organization object."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Updates the specified fields for the organization."}),"\n",(0,o.jsxs)(n.li,{children:["Includes special logic for handling a downgrade from ",(0,o.jsx)(n.code,{children:"'ENTERPRISE'"})," to ",(0,o.jsx)(n.code,{children:"'STANDARD'"}),", which requires a ",(0,o.jsx)(n.code,{children:"defaultCompanyId"})," to be provided."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"endpoints-auto-join-domains",children:"Endpoints (Auto-Join Domains)"}),"\n",(0,o.jsx)(n.p,{children:"These endpoints manage the email domains that are allowed to automatically join an organization upon user registration."}),"\n",(0,o.jsx)(n.h3,{id:"get-iddomains",children:(0,o.jsx)(n.code,{children:"GET /:id/domains"})}),"\n",(0,o.jsx)(n.p,{children:"Retrieves all auto-join domains configured for a specific organization."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires the user to be a member of the organization at any level."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"200"}),"):"]})," An array of auto-join domain objects."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"post-iddomains",children:(0,o.jsx)(n.code,{children:"POST /:id/domains"})}),"\n",(0,o.jsx)(n.p,{children:"Adds a new domain for auto-join."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,o.jsx)(n.code,{children:"ADMIN"})," role on the organization."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Body (",(0,o.jsx)(n.code,{children:"application/json"}),"):"]})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"domain"})," (string, required): The domain to add (e.g., ",(0,o.jsx)(n.code,{children:"mycompany.com"}),")."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"role"})," (string, required): The default role to assign to new users from this domain (e.g., ",(0,o.jsx)(n.code,{children:"'READER'"}),", ",(0,o.jsx)(n.code,{children:"'EDITOR'"}),")."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"201"}),"):"]})," The newly created auto-join domain object, which includes a unique ",(0,o.jsx)(n.code,{children:"verificationCode"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["Error Response (",(0,o.jsx)(n.code,{children:"400"}),"):"]})," If a public email domain (e.g., ",(0,o.jsx)(n.code,{children:"gmail.com"}),") is provided."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Creates a new ",(0,o.jsx)(n.code,{children:"AutoJoinDomain"})," record with a ",(0,o.jsx)(n.code,{children:"PENDING"})," status and a unique ",(0,o.jsx)(n.code,{children:"verificationCode"})," that must be used to verify domain ownership."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"post-iddomainsdomainmappingidverify",children:(0,o.jsx)(n.code,{children:"POST /:id/domains/:domainMappingId/verify"})}),"\n",(0,o.jsx)(n.p,{children:"Verifies ownership of a domain by checking for a specific DNS TXT record."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,o.jsx)(n.code,{children:"ADMIN"})," role on the organization."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"URL Params:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":id"}),": The organization ID."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":domainMappingId"}),": The ID of the ",(0,o.jsx)(n.code,{children:"AutoJoinDomain"})," record."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"200"}),"):"]})," The updated domain object with ",(0,o.jsx)(n.code,{children:"status: 'VERIFIED'"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsxs)(n.strong,{children:["Error Response (",(0,o.jsx)(n.code,{children:"400"}),"):"]})," If the DNS TXT record is not found or does not match."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Looks up the ",(0,o.jsx)(n.code,{children:"AutoJoinDomain"})," record by its ",(0,o.jsx)(n.code,{children:"domainMappingId"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Performs a DNS TXT record lookup for the domain."}),"\n",(0,o.jsxs)(n.li,{children:["Checks if any TXT record matches the format ",(0,o.jsx)(n.code,{children:"stagehand-verification=<verificationCode>"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["If a match is found, the domain's status is updated to ",(0,o.jsx)(n.code,{children:"VERIFIED"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"delete-iddomainsdomainmappingid",children:(0,o.jsx)(n.code,{children:"DELETE /:id/domains/:domainMappingId"})}),"\n",(0,o.jsx)(n.p,{children:"Deletes an auto-join domain configuration."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,o.jsx)(n.code,{children:"ADMIN"})," role on the organization."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"URL Params:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":id"}),": The organization ID."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":domainMappingId"}),": The ID of the ",(0,o.jsx)(n.code,{children:"AutoJoinDomain"})," record to delete."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Success Response (",(0,o.jsx)(n.code,{children:"204"}),"):"]})," No content."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Behavior:"})," Removes the ",(0,o.jsx)(n.code,{children:"AutoJoinDomain"})," record from the database."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);