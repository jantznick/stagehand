"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[173],{1184:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},4667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/integrations","title":"API Reference: SCM Integrations","description":"This document provides a detailed breakdown of the Source Code Management (SCM) integration API endpoints.","source":"@site/docs/api/integrations.md","sourceDirName":"api","slug":"/api/integrations","permalink":"/api/integrations","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/api/integrations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Reference: Invitations","permalink":"/api/invitations"},"next":{"title":"API Reference: Security Tools","permalink":"/api/security-tools"}}');var s=t(4848),r=t(1184);const o={},c="API Reference: SCM Integrations",d={},l=[{value:"Overview",id:"overview",level:2},{value:"GitHub App Auth Flow",id:"github-app-auth-flow",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"<code>POST /github/auth-start</code>",id:"post-githubauth-start",level:3},{value:"<code>GET /github/callback</code>",id:"get-githubcallback",level:3},{value:"<code>GET /</code>",id:"get-",level:3},{value:"<code>GET /:id/repositories</code>",id:"get-idrepositories",level:3},{value:"<code>DELETE /:integrationId</code>",id:"delete-integrationid",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-reference-scm-integrations",children:"API Reference: SCM Integrations"})}),"\n",(0,s.jsx)(n.p,{children:"This document provides a detailed breakdown of the Source Code Management (SCM) integration API endpoints."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"packages/api/src/routes/integrations.js"}),"\n",(0,s.jsx)(n.strong,{children:"Base Path:"})," ",(0,s.jsx)(n.code,{children:"/api/v1/integrations"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["Manages the integration with Source Code Management (SCM) platforms, specifically the installation and configuration of the Stagehand GitHub App. This is distinct from the ",(0,s.jsx)(n.code,{children:"security-tools"})," routes, which handle integrations with third-party security scanners. These endpoints facilitate the OAuth2-like flow for authorizing the GitHub App and using its access token to interact with the GitHub API."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Middleware:"})," All routes in this file are protected by the ",(0,s.jsx)(n.code,{children:"protect"})," middleware."]}),"\n",(0,s.jsx)(n.h2,{id:"github-app-auth-flow",children:"GitHub App Auth Flow"}),"\n",(0,s.jsx)(n.p,{children:"The core of this file is the secure flow for installing the GitHub App:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Initiation (",(0,s.jsx)(n.code,{children:"/github/auth-start"}),")"]}),": The frontend requests an installation URL. The backend creates a short-lived JSON Web Token (JWT) containing the current user and resource context (e.g., the company they are in). This JWT is used as the ",(0,s.jsx)(n.code,{children:"state"})," parameter in the GitHub App installation URL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Installation on GitHub"}),": The user is redirected to GitHub, where they authorize the Stagehand App for their GitHub organization and select which repositories to grant access to."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Callback (",(0,s.jsx)(n.code,{children:"/github/callback"}),")"]}),": GitHub redirects the user back to the Stagehand API. The callback includes an ",(0,s.jsx)(n.code,{children:"installation_id"})," and the original ",(0,s.jsx)(n.code,{children:"state"})," JWT."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Token Exchange & Storage"}),": The backend verifies the ",(0,s.jsx)(n.code,{children:"state"})," JWT. It then uses the ",(0,s.jsx)(n.code,{children:"installation_id"})," and a securely stored ",(0,s.jsx)(n.strong,{children:"GitHub App Private Key"})," to generate a temporary, renewable ",(0,s.jsx)(n.strong,{children:"Installation Access Token"}),". This token is what allows Stagehand to act on behalf of the user's installation. The access token is encrypted and stored in the ",(0,s.jsx)(n.code,{children:"SCMIntegration"})," table in the database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Redirect to UI"}),": The user is redirected back to the Stagehand settings page."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,s.jsx)(n.h3,{id:"post-githubauth-start",children:(0,s.jsx)(n.code,{children:"POST /github/auth-start"})}),"\n",(0,s.jsx)(n.p,{children:"Initiates the GitHub App installation flow by generating a unique installation URL."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,s.jsx)(n.code,{children:"ADMIN"})," or ",(0,s.jsx)(n.code,{children:"EDITOR"})," role on the target resource."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Body (",(0,s.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resourceType"})," (string, required): The type of resource to associate the integration with (",(0,s.jsx)(n.code,{children:"'organization'"}),", ",(0,s.jsx)(n.code,{children:"'company'"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resourceId"})," (string, required): The ID of the resource."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Success Response (",(0,s.jsx)(n.code,{children:"200"}),"):"]})," ",(0,s.jsx)(n.code,{children:'{ "installUrl": "https://github.com/apps/..." }'})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get-githubcallback",children:(0,s.jsx)(n.code,{children:"GET /github/callback"})}),"\n",(0,s.jsx)(n.p,{children:"The callback endpoint that GitHub redirects to after a user installs the app. This endpoint is not intended to be called directly by the frontend."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Query Params (from GitHub):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"state"}),": The original JWT containing user and resource context."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"installation_id"}),": The unique ID for the new app installation."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Performs the token exchange, creates the ",(0,s.jsx)(n.code,{children:"SCMIntegration"})," record with the encrypted access token, and redirects the user's browser back to the Stagehand UI."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get-",children:(0,s.jsx)(n.code,{children:"GET /"})}),"\n",(0,s.jsx)(n.p,{children:"Retrieves all SCM integrations configured for a specific resource."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,s.jsx)(n.code,{children:"READER"}),", ",(0,s.jsx)(n.code,{children:"EDITOR"}),", or ",(0,s.jsx)(n.code,{children:"ADMIN"})," role on the target resource."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Query Params:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resourceType"})," (string, required): The type of resource."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resourceId"})," (string, required): The ID of the resource."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Success Response (",(0,s.jsx)(n.code,{children:"200"}),"):"]})," An array of ",(0,s.jsx)(n.code,{children:"SCMIntegration"})," objects."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get-idrepositories",children:(0,s.jsx)(n.code,{children:"GET /:id/repositories"})}),"\n",(0,s.jsx)(n.p,{children:"Fetches a list of repositories that a specific SCM integration has access to."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permissions:"})," Requires the user to be the one who created the integration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Success Response (",(0,s.jsx)(n.code,{children:"200"}),"):"]})," An array of repository objects from the GitHub API."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Decrypts the integration's access token and uses it to call the GitHub API (",(0,s.jsx)(n.code,{children:"/installation/repositories"}),") to get the list of repositories the app has been granted access to."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"delete-integrationid",children:(0,s.jsx)(n.code,{children:"DELETE /:integrationId"})}),"\n",(0,s.jsx)(n.p,{children:"Deletes an SCM integration."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Permissions:"})," Requires the user to be the creator of the integration or an ",(0,s.jsx)(n.code,{children:"ADMIN"})," of the resource it's attached to."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:["Success Response (",(0,s.jsx)(n.code,{children:"204"}),"):"]})," No content."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," This endpoint uses a database transaction to safely perform two actions:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["It finds all projects currently linked to this integration and unlinks them (sets their ",(0,s.jsx)(n.code,{children:"scmIntegrationId"})," to ",(0,s.jsx)(n.code,{children:"null"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["It deletes the ",(0,s.jsx)(n.code,{children:"SCMIntegration"})," record itself."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);