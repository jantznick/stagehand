"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[996],{1184:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}},5176:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"frontend/stores/useAuthStore","title":"Store: useAuthStore","description":"File:* packages/web/src/stores/useAuthStore.js","source":"@site/docs/frontend/stores/useAuthStore.md","sourceDirName":"frontend/stores","slug":"/frontend/stores/useAuthStore","permalink":"/frontend/stores/useAuthStore","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/frontend/stores/useAuthStore.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Frontend Documentation: Sidebar Components","permalink":"/frontend/components/sidebar"},"next":{"title":"Store: useArchitectureStore","permalink":"/frontend/stores/useArchitectureStore"}}');var r=n(4848),t=n(1184);const o={},l="Store: useAuthStore",c={},d=[{value:"State",id:"state",level:2},{value:"Actions",id:"actions",level:2},{value:"<code>login(email, password)</code>",id:"loginemail-password",level:3},{value:"<code>register(email, password, { useMagicLink })</code>",id:"registeremail-password--usemagiclink-",level:3},{value:"<code>logout()</code>",id:"logout",level:3},{value:"<code>acceptInvitation(token, password, { useMagicLink })</code>",id:"acceptinvitationtoken-password--usemagiclink-",level:3},{value:"<code>checkAuth()</code>",id:"checkauth",level:3},{value:"<code>verifyEmail(token)</code>",id:"verifyemailtoken",level:3},{value:"<code>requestMagicLink(email)</code>",id:"requestmagiclinkemail",level:3},{value:"<code>verifyMagicLink(token)</code>",id:"verifymagiclinktoken",level:3},{value:"<code>forgotPassword(email)</code>",id:"forgotpasswordemail",level:3},{value:"<code>resetPassword({ token, password })</code>",id:"resetpassword-token-password-",level:3}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsxs)(s.h1,{id:"store-useauthstore",children:["Store: ",(0,r.jsx)(s.code,{children:"useAuthStore"})]})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"File:"})," ",(0,r.jsx)(s.code,{children:"packages/web/src/stores/useAuthStore.js"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Purpose:"})," Manages all aspects of user authentication, session state, and credentials. It is the interface for all ",(0,r.jsx)(s.code,{children:"auth"})," related API endpoints."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"state",children:"State"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"user"}),": The currently authenticated user object, containing details like ",(0,r.jsx)(s.code,{children:"id"}),", ",(0,r.jsx)(s.code,{children:"email"}),", and ",(0,r.jsx)(s.code,{children:"emailVerified"}),". Set to ",(0,r.jsx)(s.code,{children:"null"})," on logout."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"isLoading"}),": A boolean flag that is ",(0,r.jsx)(s.code,{children:"true"})," during any asynchronous authentication operations (login, register, etc.)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"error"}),": A string that holds the error message from the last failed authentication attempt."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(s.h3,{id:"loginemail-password",children:(0,r.jsx)(s.code,{children:"login(email, password)"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Authenticates a user with their email and password."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/login"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," On success, it sets the ",(0,r.jsx)(s.code,{children:"user"})," object in the state and calls ",(0,r.jsx)(s.code,{children:"useHierarchyStore.getState().fetchHierarchy()"})," to load navigation data. On failure, it populates the ",(0,r.jsx)(s.code,{children:"error"})," state."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"registeremail-password--usemagiclink-",children:(0,r.jsx)(s.code,{children:"register(email, password, { useMagicLink })"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Registers a new user. Can be initiated in password mode or magic link mode."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/register"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," In password mode, it sets the new ",(0,r.jsx)(s.code,{children:"user"})," object on success. In magic link mode, it does not set the user, as a verification step is required first."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"logout",children:(0,r.jsx)(s.code,{children:"logout()"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Logs out the current user."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/logout"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," Calls the logout endpoint, then calls ",(0,r.jsx)(s.code,{children:"resetAllStores()"})," to clear all data from every Zustand store and finally sets its own state back to the initial values (",(0,r.jsx)(s.code,{children:"user: null"}),")."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"acceptinvitationtoken-password--usemagiclink-",children:(0,r.jsx)(s.code,{children:"acceptInvitation(token, password, { useMagicLink })"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Completes the user registration process for a user who was invited via email."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/accept-invitation"})]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"checkauth",children:(0,r.jsx)(s.code,{children:"checkAuth()"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Checks with the server to see if the user has an active session (e.g., on page load)."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"GET /api/v1/auth/me"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," If a session is active, it sets the ",(0,r.jsx)(s.code,{children:"user"})," object in the state."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"verifyemailtoken",children:(0,r.jsx)(s.code,{children:"verifyEmail(token)"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Verifies a user's email address using a token sent to them."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/verify-email"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," On success, it sets the ",(0,r.jsx)(s.code,{children:"user"})," object (which will now have ",(0,r.jsx)(s.code,{children:"emailVerified: true"}),") and fetches the hierarchy data."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"requestmagiclinkemail",children:(0,r.jsx)(s.code,{children:"requestMagicLink(email)"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Initiates a passwordless login by sending a magic link to the user's email."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/magic-link"})]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"verifymagiclinktoken",children:(0,r.jsx)(s.code,{children:"verifyMagicLink(token)"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Verifies a magic link token from an email to log a user in."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/magic-link/verify"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Behavior:"})," On success, sets the ",(0,r.jsx)(s.code,{children:"user"})," object and fetches the hierarchy."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"forgotpasswordemail",children:(0,r.jsx)(s.code,{children:"forgotPassword(email)"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Sends a password reset link to a user's email."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/forgot-password"})]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"resetpassword-token-password-",children:(0,r.jsx)(s.code,{children:"resetPassword({ token, password })"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Description:"})," Sets a new password for a user using a token from a password reset email."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"API Call:"})," ",(0,r.jsx)(s.code,{children:"POST /api/v1/auth/reset-password"})]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);