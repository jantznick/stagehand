"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[657],{1184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},2240:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"frontend/lib","title":"Frontend Documentation: Lib Utilities","description":"This document provides a breakdown of the shared utility functions and constants defined in the lib directory.","source":"@site/docs/frontend/lib.md","sourceDirName":"frontend","slug":"/frontend/lib","permalink":"/frontend/lib","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/frontend/lib.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Reference: Technologies","permalink":"/api/technologies"},"next":{"title":"Frontend Documentation: Custom Hooks","permalink":"/frontend/hooks"}}');var i=s(4848),o=s(1184);const r={},c="Frontend Documentation: Lib Utilities",d={},l=[{value:"Overview",id:"overview",level:2},{value:"<code>constants.js</code>",id:"constantsjs",level:2},{value:"Constants",id:"constants",level:3},{value:"<code>layout.js</code>",id:"layoutjs",level:2},{value:"Functions",id:"functions",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"frontend-documentation-lib-utilities",children:"Frontend Documentation: Lib Utilities"})}),"\n",(0,i.jsxs)(n.p,{children:["This document provides a breakdown of the shared utility functions and constants defined in the ",(0,i.jsx)(n.code,{children:"lib"})," directory."]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"lib"})," directory contains shared, reusable code that is not specific to any single component. This includes application-wide constants and helper functions."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"constantsjs",children:(0,i.jsx)(n.code,{children:"constants.js"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File:"})," ",(0,i.jsx)(n.code,{children:"packages/web/src/lib/constants.js"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"}),' To provide a single source of truth for constant values used throughout the application, preventing the use of "magic strings".']}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"ITEM_TYPES"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," An object that maps the canonical names of hierarchy items (e.g., ",(0,i.jsx)(n.code,{children:"ORGANIZATION"}),") to the lowercase string representation used in the API and state (",(0,i.jsx)(n.code,{children:"organization"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage:"})," Used to ensure consistency when referencing item types in stores and components."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"API_ENDPOINTS"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," An object that maps an ",(0,i.jsx)(n.code,{children:"ITEM_TYPE"})," to its corresponding base API endpoint."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage:"})," While most API calls are encapsulated in stores, this could be used for dynamic fetch requests."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"TECHNOLOGY_TYPES"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," An array of strings representing the allowed types for a ",(0,i.jsx)(n.code,{children:"Technology"})," entity."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage:"}),' Used to populate the "Type" dropdown when adding or editing a technology tag on a project.']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"layoutjs",children:(0,i.jsx)(n.code,{children:"layout.js"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"File:"})," ",(0,i.jsx)(n.code,{children:"packages/web/src/lib/layout.js"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," To provide utility functions for calculating the layout of the architecture dependency graph."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"getLayoutedElements(nodes, edges, direction = 'TB')"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description:"})," This is a wrapper around the ",(0,i.jsx)(n.code,{children:"dagre"})," graph layout library. It takes the nodes (projects) and edges (dependencies) that are managed in the ",(0,i.jsx)(n.code,{children:"useArchitectureStore"})," and calculates the ",(0,i.jsx)(n.code,{children:"x"})," and ",(0,i.jsx)(n.code,{children:"y"})," positions for each node to create a clean, automatic hierarchical layout."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nodes"}),": The array of node objects for React Flow."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"edges"}),": The array of edge objects for React Flow."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"direction"}),": The layout direction (",(0,i.jsx)(n.code,{children:"'TB'"})," for Top-to-Bottom, ",(0,i.jsx)(n.code,{children:"'LR'"})," for Left-to-Right)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns:"})," A new array of ",(0,i.jsx)(n.code,{children:"nodes"}),", where each node object has been updated with a ",(0,i.jsx)(n.code,{children:"position"})," property (",(0,i.jsx)(n.code,{children:"{ x, y }"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage:"})," This function is called by the ",(0,i.jsx)(n.code,{children:"ProjectGraphContainer"})," component before passing the nodes to the ",(0,i.jsx)(n.code,{children:"<DependencyGraph />"}),"."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);