"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[927],{1184:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var n=s(6540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}},3567:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"frontend/stores/useArchitectureStore","title":"Store: useArchitectureStore","description":"File:* packages/web/src/stores/useArchitectureStore.js","source":"@site/docs/frontend/stores/useArchitectureStore.md","sourceDirName":"frontend/stores","slug":"/frontend/stores/useArchitectureStore","permalink":"/frontend/stores/useArchitectureStore","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/frontend/stores/useArchitectureStore.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Store: useAuthStore","permalink":"/frontend/stores/useAuthStore"},"next":{"title":"Store: useCompanyStore","permalink":"/frontend/stores/useCompanyStore"}}');var r=s(4848),o=s(1184);const i={},c="Store: useArchitectureStore",d={},l=[{value:"State",id:"state",level:2},{value:"Actions",id:"actions",level:2},{value:"<code>fetchRelationships(companyId)</code>",id:"fetchrelationshipscompanyid",level:3},{value:"<code>addRelationship(sourceProjectId, targetProjectId, type, companyId)</code>",id:"addrelationshipsourceprojectid-targetprojectid-type-companyid",level:3},{value:"<code>deleteRelationship(relationshipId, companyId)</code>",id:"deleterelationshiprelationshipid-companyid",level:3}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"store-usearchitecturestore",children:["Store: ",(0,r.jsx)(t.code,{children:"useArchitectureStore"})]})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"File:"})," ",(0,r.jsx)(t.code,{children:"packages/web/src/stores/useArchitectureStore.js"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Purpose:"})," Manages the data for the project dependency graph visualization."]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"state",children:"State"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"relationships"}),": An array of relationship objects. Each object represents a directed edge in the dependency graph (e.g., from a ",(0,r.jsx)(t.code,{children:"sourceProjectId"})," to a ",(0,r.jsx)(t.code,{children:"targetProjectId"}),")."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"isLoading"}),": A boolean flag for when architecture data is being fetched."]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(t.h3,{id:"fetchrelationshipscompanyid",children:(0,r.jsx)(t.code,{children:"fetchRelationships(companyId)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Description:"})," Fetches all project dependency relationships for a given company."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"API Call:"})," ",(0,r.jsx)(t.code,{children:"GET /api/v1/relationships?companyId=<companyId>"})," (Note: The store implementation incorrectly calls ",(0,r.jsx)(t.code,{children:"/api/v1/projects"})," here, which is a bug that should be noted)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Behavior:"})," Populates the ",(0,r.jsx)(t.code,{children:"relationships"})," array in the state."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"addrelationshipsourceprojectid-targetprojectid-type-companyid",children:(0,r.jsx)(t.code,{children:"addRelationship(sourceProjectId, targetProjectId, type, companyId)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Description:"})," Creates a new dependency relationship between two projects."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"API Call:"})," ",(0,r.jsx)(t.code,{children:"POST /api/v1/relationships?companyId=<companyId>"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Behavior:"})," Refreshes the relationship list on success to update the graph."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"deleterelationshiprelationshipid-companyid",children:(0,r.jsx)(t.code,{children:"deleteRelationship(relationshipId, companyId)"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Description:"})," Deletes a dependency relationship."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"API Call:"})," ",(0,r.jsx)(t.code,{children:"DELETE /api/v1/relationships/:relationshipId?companyId=<companyId>"})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Behavior:"})," Refreshes the relationship list on success to update the graph."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);