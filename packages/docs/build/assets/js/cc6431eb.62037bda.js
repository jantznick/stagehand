"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[349],{738:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"frontend/stores/useDomainStore","title":"Store: useDomainStore","description":"File:* packages/web/src/stores/useDomainStore.js","source":"@site/docs/frontend/stores/useDomainStore.md","sourceDirName":"frontend/stores","slug":"/frontend/stores/useDomainStore","permalink":"/frontend/stores/useDomainStore","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/frontend/stores/useDomainStore.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Store: useCompanyStore","permalink":"/frontend/stores/useCompanyStore"},"next":{"title":"Store: useFindingStore","permalink":"/frontend/stores/useFindingStore"}}');var s=i(4848),r=i(1184);const d={},t="Store: useDomainStore",a={},c=[{value:"State",id:"state",level:2},{value:"Actions",id:"actions",level:2},{value:"<code>fetchDomains(orgId)</code>",id:"fetchdomainsorgid",level:3},{value:"<code>addDomain(orgId, domain)</code>",id:"adddomainorgid-domain",level:3},{value:"<code>verifyDomain(orgId, domainId)</code>",id:"verifydomainorgid-domainid",level:3},{value:"<code>deleteDomain(orgId, domainId)</code>",id:"deletedomainorgid-domainid",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"store-usedomainstore",children:["Store: ",(0,s.jsx)(n.code,{children:"useDomainStore"})]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"packages/web/src/stores/useDomainStore.js"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose:"})," Manages verified domains for an organization, which enables new users to automatically join that organization if they sign up with a matching email address."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"state",children:"State"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"domains"}),": An array of domain objects for the current organization. Each object includes the domain name and its verification status."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isLoading"}),": A boolean flag for when domain data is being fetched or updated."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"actions",children:"Actions"}),"\n",(0,s.jsx)(n.h3,{id:"fetchdomainsorgid",children:(0,s.jsx)(n.code,{children:"fetchDomains(orgId)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Fetches all domains configured for an organization."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Call:"})," ",(0,s.jsx)(n.code,{children:"GET /api/v1/organizations/:orgId/domains"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Populates the ",(0,s.jsx)(n.code,{children:"domains"})," array in the state."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adddomainorgid-domain",children:(0,s.jsx)(n.code,{children:"addDomain(orgId, domain)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Adds a new, unverified domain to an organization."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Call:"})," ",(0,s.jsx)(n.code,{children:"POST /api/v1/organizations/:orgId/domains"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Refreshes the domain list on success."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"verifydomainorgid-domainid",children:(0,s.jsx)(n.code,{children:"verifyDomain(orgId, domainId)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Asks the backend to check the domain's DNS records for the verification ",(0,s.jsx)(n.code,{children:"TXT"})," record."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Call:"})," ",(0,s.jsx)(n.code,{children:"POST /api/v1/organizations/:orgId/domains/:domainId/verify"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Refreshes the domain list on success to show the updated verification status."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"deletedomainorgid-domainid",children:(0,s.jsx)(n.code,{children:"deleteDomain(orgId, domainId)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description:"})," Deletes a domain from an organization."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Call:"})," ",(0,s.jsx)(n.code,{children:"DELETE /api/v1/organizations/:orgId/domains/:domainId"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior:"})," Refreshes the domain list on success."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1184:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var o=i(6540);const s={},r=o.createContext(s);function d(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);