"use strict";(self.webpackChunk_stagehand_docs=self.webpackChunk_stagehand_docs||[]).push([[948],{1184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const c={},o=i.createContext(c);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},3480:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>j,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/projects","title":"API Reference: Projects (Applications)","description":"This document provides a detailed breakdown of the project-related API endpoints. \\"Projects\\" are the core entities in the Stagehand developer catalog and are often referred to as \\"Applications\\" in the UI and business logic.","source":"@site/docs/api/projects.md","sourceDirName":"api","slug":"/api/projects","permalink":"/api/projects","draft":false,"unlisted":false,"editUrl":"https://github.com/your-org/stagehand/tree/main/packages/docs/docs/api/projects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"API Reference: Teams","permalink":"/api/teams"},"next":{"title":"API Reference: Memberships","permalink":"/api/memberships"}}');var c=s(4848),o=s(1184);const r={},d="API Reference: Projects (Applications)",t={},l=[{value:"Overview",id:"overview",level:2},{value:"Endpoints (Core)",id:"endpoints-core",level:2},{value:"<code>GET /</code>",id:"get-",level:3},{value:"<code>GET /:id</code>",id:"get-id",level:3},{value:"<code>POST /</code>",id:"post-",level:3},{value:"<code>PUT /:id</code>",id:"put-id",level:3},{value:"<code>DELETE /:id</code>",id:"delete-id",level:3},{value:"Endpoints (Contact Management)",id:"endpoints-contact-management",level:2},{value:"<code>GET /:id/members</code>",id:"get-idmembers",level:3},{value:"<code>POST /:id/contacts</code>",id:"post-idcontacts",level:3},{value:"<code>PUT /:id/contacts/:contactId</code>",id:"put-idcontactscontactid",level:3},{value:"<code>DELETE /:id/contacts/:contactId</code>",id:"delete-idcontactscontactid",level:3},{value:"Endpoints (Technology Management)",id:"endpoints-technology-management",level:2},{value:"<code>POST /:id/technologies</code>",id:"post-idtechnologies",level:3},{value:"<code>DELETE /:id/technologies/:technologyId</code>",id:"delete-idtechnologiestechnologyid",level:3},{value:"Endpoints (Security Tool Integration)",id:"endpoints-security-tool-integration",level:2},{value:"<code>POST /:id/link-security-tool</code>",id:"post-idlink-security-tool",level:3},{value:"<code>POST /:id/sync-findings</code>",id:"post-idsync-findings",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"api-reference-projects-applications",children:"API Reference: Projects (Applications)"})}),"\n",(0,c.jsx)(n.p,{children:'This document provides a detailed breakdown of the project-related API endpoints. "Projects" are the core entities in the Stagehand developer catalog and are often referred to as "Applications" in the UI and business logic.'}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"File:"})," ",(0,c.jsx)(n.code,{children:"packages/api/src/routes/projects.js"}),"\n",(0,c.jsx)(n.strong,{children:"Base Path:"})," ",(0,c.jsx)(n.code,{children:"/api/v1/projects"})]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,c.jsx)(n.p,{children:"Manages projects, which represent the actual software applications, services, or libraries that are being tracked. This is the most detailed and feature-rich part of the API, containing numerous endpoints for managing a project's rich metadata."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Middleware:"})," All routes in this file are protected by the ",(0,c.jsx)(n.code,{children:"protect"})," middleware."]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"endpoints-core",children:"Endpoints (Core)"}),"\n",(0,c.jsx)(n.h3,{id:"get-",children:(0,c.jsx)(n.code,{children:"GET /"})}),"\n",(0,c.jsx)(n.p,{children:"Retrieves a list of all projects the current user has access to."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Implicitly handled by ",(0,c.jsx)(n.code,{children:"getVisibleResourceIds"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," An array of project objects."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Uses the ",(0,c.jsx)(n.code,{children:"getVisibleResourceIds"})," helper to find and return all projects the user has visibility on."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"get-id",children:(0,c.jsx)(n.code,{children:"GET /:id"})}),"\n",(0,c.jsx)(n.p,{children:"Retrieves a single project by its ID with extensive, enriched details."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"READER"}),", ",(0,c.jsx)(n.code,{children:"EDITOR"}),", or ",(0,c.jsx)(n.code,{children:"ADMIN"})," role on the project."]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," A single, detailed project object."]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["Fetches the project and includes its full hierarchy (",(0,c.jsx)(n.code,{children:"team"}),", ",(0,c.jsx)(n.code,{children:"company"}),", ",(0,c.jsx)(n.code,{children:"organization"}),"), ",(0,c.jsx)(n.code,{children:"technologies"}),", and ",(0,c.jsx)(n.code,{children:"dependencies"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Contact Enrichment:"})," It also fetches the project's ",(0,c.jsx)(n.code,{children:"contacts"})," and then cross-references them with the ",(0,c.jsx)(n.code,{children:"User"})," and ",(0,c.jsx)(n.code,{children:"Membership"})," tables. This allows the response to include details on whether a contact is also a registered Stagehand user and what their specific role is on this project, providing a complete picture of project ownership."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"post-",children:(0,c.jsx)(n.code,{children:"POST /"})}),"\n",(0,c.jsx)(n.p,{children:"Creates a new project within a team."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the parent ",(0,c.jsx)(n.code,{children:"teamId"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"name"})," (string, required): The name of the new project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"description"})," (string, optional): A description for the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"teamId"})," (string, required): The ID of the team this project will belong to."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"201"}),"):"]})," The newly created project object."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Creates the project and makes the creator an ",(0,c.jsx)(n.code,{children:"ADMIN"})," of the new project via an automatic ",(0,c.jsx)(n.code,{children:"Membership"})," record."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"put-id",children:(0,c.jsx)(n.code,{children:"PUT /:id"})}),"\n",(0,c.jsx)(n.p,{children:"Updates the core metadata for a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]})," Contains numerous optional fields for project metadata, including:","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"name"}),", ",(0,c.jsx)(n.code,{children:"description"}),", ",(0,c.jsx)(n.code,{children:"applicationUrl"}),", ",(0,c.jsx)(n.code,{children:"repositoryUrl"}),", ",(0,c.jsx)(n.code,{children:"ciCdPipelineUrl"}),", ",(0,c.jsx)(n.code,{children:"deploymentStatus"}),", ",(0,c.jsx)(n.code,{children:"version"}),", and more."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," The updated project object."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"delete-id",children:(0,c.jsx)(n.code,{children:"DELETE /:id"})}),"\n",(0,c.jsx)(n.p,{children:"Deletes a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"204"}),"):"]})," No content."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Deletes the project record and its associated relations."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"endpoints-contact-management",children:"Endpoints (Contact Management)"}),"\n",(0,c.jsx)(n.h3,{id:"get-idmembers",children:(0,c.jsx)(n.code,{children:"GET /:id/members"})}),"\n",(0,c.jsx)(n.p,{children:"Retrieves a list of all users in the parent organization who could potentially be added as contacts to the project. This is used to populate dropdowns in the UI."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"READER"}),", ",(0,c.jsx)(n.code,{children:"EDITOR"}),", or ",(0,c.jsx)(n.code,{children:"ADMIN"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," An array of user objects."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Fetches all users in the project's parent organization and filters out any who are already contacts on the project to prevent duplicates."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"post-idcontacts",children:(0,c.jsx)(n.code,{children:"POST /:id/contacts"})}),"\n",(0,c.jsx)(n.p,{children:"Adds a contact to a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"contactId"})," (string, required): The ID of the generic ",(0,c.jsx)(n.code,{children:"Contact"})," record to add."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"contactType"})," (string, required): The role of this contact on the project (e.g., 'Technical Lead', 'Product Manager')."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"201"}),"):"]})," The new ",(0,c.jsx)(n.code,{children:"ProjectContact"})," link object."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Creates a ",(0,c.jsx)(n.code,{children:"ProjectContact"})," record to link the generic ",(0,c.jsx)(n.code,{children:"Contact"})," to the ",(0,c.jsx)(n.code,{children:"Project"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"put-idcontactscontactid",children:(0,c.jsx)(n.code,{children:"PUT /:id/contacts/:contactId"})}),"\n",(0,c.jsx)(n.p,{children:"Updates a contact's role on a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"contactType"})," (string, required): The new role for the contact."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," The updated ",(0,c.jsx)(n.code,{children:"ProjectContact"})," object."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Updates the ",(0,c.jsx)(n.code,{children:"contactType"})," field on the ",(0,c.jsx)(n.code,{children:"ProjectContact"})," junction record."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"delete-idcontactscontactid",children:(0,c.jsx)(n.code,{children:"DELETE /:id/contacts/:contactId"})}),"\n",(0,c.jsx)(n.p,{children:"Removes a contact from a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"204"}),"):"]})," No content."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Deletes the ",(0,c.jsx)(n.code,{children:"ProjectContact"})," link record."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"endpoints-technology-management",children:"Endpoints (Technology Management)"}),"\n",(0,c.jsx)(n.h3,{id:"post-idtechnologies",children:(0,c.jsx)(n.code,{children:"POST /:id/technologies"})}),"\n",(0,c.jsx)(n.p,{children:"Links a technology (e.g., 'React', 'Node.js') to a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"technologyId"})," (string, required): The ID of the technology to add."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"version"})," (string, optional): The version of the technology being used."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"201"}),"):"]})," The new ",(0,c.jsx)(n.code,{children:"ProjectTechnology"})," object."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Creates a ",(0,c.jsx)(n.code,{children:"ProjectTechnology"})," record to link the ",(0,c.jsx)(n.code,{children:"Technology"})," to the ",(0,c.jsx)(n.code,{children:"Project"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"delete-idtechnologiestechnologyid",children:(0,c.jsx)(n.code,{children:"DELETE /:id/technologies/:technologyId"})}),"\n",(0,c.jsx)(n.p,{children:"Removes a technology from a project."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"204"}),"):"]})," No content."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Deletes the ",(0,c.jsx)(n.code,{children:"ProjectTechnology"})," link record."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"endpoints-security-tool-integration",children:"Endpoints (Security Tool Integration)"}),"\n",(0,c.jsx)(n.h3,{id:"post-idlink-security-tool",children:(0,c.jsx)(n.code,{children:"POST /:id/link-security-tool"})}),"\n",(0,c.jsx)(n.p,{children:"Links a project to a specific security tool configuration that has been set up at the company level."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"toolConfigurationId"})," (string, required): The ID of the ",(0,c.jsx)(n.code,{children:"ToolConfiguration"})," to link."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"projectMappings"})," (object, required): A JSON object that maps project identifiers needed by the external tool (e.g., ",(0,c.jsx)(n.code,{children:'{ "repository": "owner/repo" }'})," for GitHub)."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," The created or updated ",(0,c.jsx)(n.code,{children:"SecurityToolProjectLink"})," object."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.strong,{children:"Behavior:"})," Creates or updates the ",(0,c.jsx)(n.code,{children:"SecurityToolProjectLink"})," record. This connection is essential for the system to know where to pull security findings from for this project."]}),"\n"]}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h3,{id:"post-idsync-findings",children:(0,c.jsx)(n.code,{children:"POST /:id/sync-findings"})}),"\n",(0,c.jsx)(n.p,{children:"Triggers a manual synchronization of security findings from a linked external tool."}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Permissions:"})," Requires ",(0,c.jsx)(n.code,{children:"ADMIN"})," or ",(0,c.jsx)(n.code,{children:"EDITOR"})," role on the project."]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:(0,c.jsxs)(n.strong,{children:["Body (",(0,c.jsx)(n.code,{children:"application/json"}),"):"]})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"toolType"})," (string, required): The type of tool to sync from (e.g., ",(0,c.jsx)(n.code,{children:"'GITHUB'"}),")."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsxs)(n.strong,{children:["Success Response (",(0,c.jsx)(n.code,{children:"200"}),"):"]})," A summary object, e.g., ",(0,c.jsx)(n.code,{children:'{ "message": "Sync completed", "newFindings": 5, "updatedFindings": 2 }'}),"."]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:["Identifies the appropriate ",(0,c.jsx)(n.code,{children:"SecurityToolProjectLink"})," for the given ",(0,c.jsx)(n.code,{children:"toolType"}),"."]}),"\n",(0,c.jsxs)(n.li,{children:["Calls a specific utility function (e.g., ",(0,c.jsx)(n.code,{children:"syncGitHubFindings"})," from ",(0,c.jsx)(n.code,{children:"src/utils/findings.js"}),") which contains the business logic to:\na. Connect to the external tool's API.\nb. Fetch the security findings.\nc. Normalize the data into the Stagehand ",(0,c.jsx)(n.code,{children:"Finding"})," format.\nd. Save the findings to the database, linking them to this project."]}),"\n",(0,c.jsx)(n.li,{children:"This is a critical ASPM function."}),"\n"]}),"\n"]}),"\n"]})]})}function j(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}}}]);